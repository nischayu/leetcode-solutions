class Solution:
    def longestConsecutive(self, nums: List[int]) -> int:
        nums_set = set(nums)
        max_length = 1

        #Base Case
        if(len(nums) == 0):
            return 0
        if(len(nums) == 1):
            return 1

        #General Case
        for i in range(0, len(nums)):
            if(nums[i] - 1 in nums_set): #not start of sequence
                continue
            else: #is start of sequence
                curr_length = 1
                j = nums[i]+1
                while(j in nums_set):
                    curr_length += 1
                    j += 1

                max_length = max(max_length, curr_length)

        return max_length

        #The time complexity of this solution is O(n)
        #The space complexity of this solution is O(1)